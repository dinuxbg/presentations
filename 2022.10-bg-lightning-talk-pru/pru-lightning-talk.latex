% SPDX-License-Identifier: CC-BY-SA-4.0

\documentclass[lualatex,17pt,aspectratio=169]{beamer}

\usepackage{polyglossia}
\setmainlanguage{bulgarian}
\setotherlanguage{english}

\newcommand{\done}{\item[\mbox{\ooalign{$\checkmark$\cr\hidewidth$\square$\hidewidth\cr}}]}


%\setsansfont{freeserif}
%\setmainfont{freeserif}
\setmainfont{FreeSerif}
\setsansfont{FreeSans}
\setmonofont{CMU Typewriter Text}
%\setmonofont{FreeMono}

\usetheme{Boadilla}
\usecolortheme{whale}

\graphicspath{ {./images/} }

\title{ Софтуерно дефинирани периферини шини с PRU }
\author{Димитър Димитров <dimitar@dinux.eu>}
\date{02.06.2022}


\begin{document}
\begin{frame}
  \titlepage
\end{frame}

\begin{frame}[fragile]
  \frametitle{Защо да пиша периферна шина?}
  \begin{itemize}
    \item Занимаваш се с Embedded Linux?
    \item Ще закачаш нестандартна периферия?
    \begin{itemize}
      \item Пример: Искам 15 \verb|SPI| host контролера.
      \item Пример: Искам 16 PDM микрофона.
    \end{itemize}
    \item Обаче не искаш \verb|FPGA|?
    \item И не ти се занимава с външен \mu{}C?
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Какво е PRU?}
  \begin{itemize}
    \item Процесорна архитектура - Programmable Realtime Unit.
    \item Специализиран за входно/изходни операции.
    \item 200MHz тактова честота.
    \item Включен в някои SoC от Texas Instruments.
    \begin{itemize}
      \item Beaglebone OSHW едноплаткови компютри.
    \end{itemize}
    \item 2-4 ядра работят паралелно (I/О, трансфер на данни, обработка).
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{За какво мога да го ползвам?}
  \begin{itemize}
    \item Софтуерно реализирани периферни шини - bit bang I/O.
    \begin{itemize}
      \item Повечето инструкции се изпълняват за точно 1 цикъл (5ns).
      \item PRU GPIO - достъп с една инструкция (5ns).
      \item PRU GPIO - достъп чрез специални CPU регистри.
      \item Липсват прекъсвания - за да има детерминизъм при I/O.
      \item PRU firmware е обикновено комбинация от C и асемблер.
    \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{За какво мога да го ползвам?}
  \begin{itemize}
    \item Софтуерно реализирано \verb|DMA|.
    \begin{itemize}
      \item Достъп до системната шина на SoC.
      \item ... включително \verb|DDR-SDRAM| паметта.
      \item Предимство пред решение с външен \mu{}C.
    \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Софтуерна поддръжка}
  Позволява да изградите система единствено от свободен софтуер!
  \begin{itemize}
    \done SoC Linux BSP - good support in mainline.
    \done Remoteproc Linux kernel driver - in mainline.
    \done RPMSG Linux kernel driver.
    \done Binutils + GCC + Newlib toolchain - in mainline.
  \end{itemize}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Отворени проекти с PRU}
  \begin{itemize}
    \item BeagleLogic - 14ch, 100Msps логически анализатор.
    \begin{itemize}
      \item 100\% OSHW, 99\% Open Source Software
      \item Компилира се с TI Proprietary PRU C Compiler
    \end{itemize}
  \end{itemize}
\includegraphics[width=0.5\textwidth,height=0.5\textheight,keepaspectratio=true]{beaglelogic-standalone-top.jpg}

\end{frame}

\begin{frame}[fragile]
  \frametitle{Отворени проекти с PRU}
  \begin{itemize}
    \item BeagleMic - USB аудио карта с 16 PDM микрофона.
    \begin{itemize}
      \item 100\% OSHW, 100\% Open Source Software
      \item Компилира се с GCC
    \end{itemize}
  \end{itemize}
\includegraphics[width=0.5\textwidth,height=0.5\textheight,keepaspectratio=true]{beaglemic.jpg}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Недостатъци}
  \begin{itemize}
    \item Един единствен доставчик - Texas Instruments.
    \item Remoteproc+RPMSG: сложен софтуер и фърмуер за комуникация между PRU и Linux ядрото.
    \item Някои драйвери все още не са в Linux mainline.
    \begin{itemize}
      \item Но има усилия за достигане на 100\% поддръжка.
    \end{itemize}
    \item Примитивен паралелизъм, далеч от възможностите на FPGA.
    \item Твори се на \verb|C| и \verb|Assembler|.
  \end{itemize}
\end{frame}


\end{document}
